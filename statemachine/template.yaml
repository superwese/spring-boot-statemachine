AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  createEvents

  Sample SAM Template for createEvents

Mappings:
  StageMapping:
    int:
      Prefix: "I-"
      PrefixLowercase: "i-"
      SubDomain: "i."
      Postfix: "-i"
      ValueUppercase: "Integration"
    qs:
      Prefix: "Q-"
      PrefixLowercase: "q-"
      SubDomain: "qs."
      Postfix: "-q"
      ValueUppercase: "QS"
    prod:
      Prefix: "P-"
      PrefixLowercase: "p-"
      SubDomain: ""
      Postfix: "-p"
      ValueUppercase: "Production"
Globals:
  Function:
    Runtime: java11
    Timeout: 60
    Environment:
      Variables:
        SPRING_PROFILES_ACTIVE: !Ref SpringProfilesActive
        RDS_HOSTNAME: !Ref RdsHostname
        RDS_PORT: !Ref RdsPort
        RDS_USERNAME: root
        RDS_PASSWORD: !GetAtt DecryptedDatabasePassword.PlainText
    VpcConfig:
      SecurityGroupIds:
        - Fn::ImportValue: P-FargateContainerSecurityGroup

      SubnetIds:
        - !ImportValue SavR-PrivateSubnetA
        - !ImportValue SavR-PrivateSubnetB
        - !ImportValue SavR-PrivateSubnetC

Parameters:
  RdsPort:
    Type: String
    Default: 3306
  RdsHostname:
    Type: String
  SpringProfilesActive:
    Type: String
  Stage:
    Type: String
    Default: int
  EncryptedDatabasePassword:
    Type: String
    Description: Database admin account password
  SNSTopic:
    Type: String
    Description: The Arn(!) of the Topic to publish to
    Default: arn:aws:sns:eu-central-1:832077700054:CreateTaskExecutionCreatedEvents_TestTopic

Resources:
  GetTenantUuidsStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub EventCreator-Starter-${Stage}
      DefinitionUri: statemachine/getTenantsAndStartConverters.asl.json
      DefinitionSubstitutions:
        GetTenantsFunctionArn: !GetAtt GetTenantsFunction.Arn
      Policies:
        - CloudWatchLogsFullAccess
        - LambdaInvokePolicy:
            FunctionName: !Ref GetTenantsFunction
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StartermachineLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  StartermachineLogs:
    Type: AWS::Logs::LogGroup

  EventCreatorStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      Type: EXPRESS
      Name: !Sub EventCreatorStateMachine-${Stage}-Express
      DefinitionUri: statemachine/taskExecutionEventCreator.asl.json
      DefinitionSubstitutions:
        IncrementFunctionArn: !GetAtt IncrementFunction.Arn
        SumFunctionArn: !GetAtt SumFunction.Arn
        GetTaskExecutionsFunctionArn: !GetAtt GetTaskExecutionsFunction.Arn
        ConvertTaskExecutionFunctionArn: !GetAtt ConvertTaskExecutionFunction.Arn
        RestartFunctionArn: !GetAtt RestartFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref TransactionTable
        SNSTopicArn: !Ref SNSTopic
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref RestartFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref IncrementFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SumFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ConvertTaskExecutionFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GetTaskExecutionsFunction
        - DynamoDBWritePolicy:
            TableName: !Ref TransactionTable
        - SNSPublishMessagePolicy:
            TopicName: !Select
              - 5
              - !Split
                - ':'
                - !Ref SNSTopic
        - CloudWatchLogsFullAccess
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StatemachineLogs.Arn
        IncludeExecutionData: true
        Level: ALL

  StatemachineLogs:
    Type: AWS::Logs::LogGroup

  IncrementFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.handler
      CodeUri: functions/IncrementFunction

  SumFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.handler
      CodeUri: functions/SumFunction

  GetTaskExecutionsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/GetTaskexecutions
      Handler: com.amazonaws.serverless.proxy.internal.servlet.StreamLambdaHandler
      Runtime: java11
      MemorySize: 768
      Timeout: 900

  ConvertTaskExecutionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/ConvertTaskexecution
      Handler: com.amazonaws.serverless.proxy.internal.servlet.StreamLambdaHandler
      Runtime: java11
      MemorySize: 768

  GetTenantsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/GetTenants
      Handler: com.amazonaws.serverless.proxy.internal.servlet.StreamLambdaHandler
      Runtime: java11
      MemorySize: 768

  RestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.handler
      CodeUri: functions/RestartFunction
      VpcConfig: !Ref AWS::NoValue
      AutoPublishAlias: live

  ApplyRestartPolicyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.handler
      CodeUri: functions/ApplyRestartPolicy
      VpcConfig: !Ref AWS::NoValue
      AutoPublishAlias: live
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - lambda:GetFunction
              Resource: !GetAtt RestartFunction.Arn
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: iam:PutRolePolicy
              Resource: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':role/*'

  TransactionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-status-${Stage}
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: tenantUuid
          AttributeType: S
      KeySchema:
        - AttributeName: tenantUuid
          KeyType: HASH
        - AttributeName: uuid
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: status_idx
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: uuid
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - error
            ProjectionType: INCLUDE
      BillingMode: PAY_PER_REQUEST

  ApplyRestartPolicy:
    Type: Custom::ApplyRestartPolicy
    DependsOn: RestartFunction
    Properties:
      ServiceToken: !GetAtt ApplyRestartPolicyFunction.Arn
      StatemachineArn: !Ref EventCreatorStateMachine
      FunctionArn: !GetAtt RestartFunction.Arn
      FunctionVersion: !GetAtt ApplyRestartPolicyFunction.Version.Version
      RestartVersion: !GetAtt RestartFunction.Version.Version
  DecryptedDatabasePassword:
    Type: Custom::Decrypt
    Properties:
      ServiceToken: !ImportValue 'ConfigSecretsDecryptFunctionArn'
      CiphertextBlob: !Ref 'EncryptedDatabasePassword'

Outputs:
  EventCreatorStateMachineArn:
    Description: "Create TaskExecutions events State machine ARN"
    Value: !Ref EventCreatorStateMachine
